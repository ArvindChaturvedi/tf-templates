name: Production Release: Tag & Notes

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Production Git Tag and Release Notes
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set version and tag name
        id: tag
        run: |
          version="${{ github.event.inputs.version }}"
          if [[ -z "$version" ]]; then
            echo "Version input is required!" >&2
            exit 1
          fi
          tag="v$version"
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: changelog
        run: |
          version="${{ steps.tag.outputs.version }}"
          tag="${{ steps.tag.outputs.tag }}"
          branch="${GITHUB_REF_NAME}"

          echo "# Release ${version} (${branch})" > release_notes.md
          echo "" >> release_notes.md
          echo "**Tag:** \`${tag}\`" >> release_notes.md
          echo "**Branch:** \`${branch}\`" >> release_notes.md
          echo "**Release Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> release_notes.md
          echo "" >> release_notes.md

          echo "## ðŸ“‹ Changes" >> release_notes.md
          echo "" >> release_notes.md

          prev_tag=$(git tag --sort=-creatordate | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | grep -v "^$tag$" | head -n1)
          if [ -z "$prev_tag" ]; then
            echo "### Initial Production Release" >> release_notes.md
            echo "" >> release_notes.md
            git log --pretty=format:"- **%s** (%h) - %an" --no-merges >> release_notes.md
          else
            echo "### Changes since ${prev_tag}" >> release_notes.md
            echo "" >> release_notes.md
            git log "$prev_tag"..HEAD --pretty=format:"- **%s** (%h) - %an" --no-merges >> release_notes.md
          fi

          echo "" >> release_notes.md
          echo "---" >> release_notes.md
          echo "*This release was automatically generated by GitHub Actions*" >> release_notes.md

      - name: Create new release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.version }}
          body_path: release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}