  description = "Whether to create the Aurora PostgreSQL database cluster"
  type        = bool
  default     = true

variable "create_kms_key" {
  description = "Whether to create a new KMS key for encryption"
  type        = bool
  default     = true

variable "create_enhanced_monitoring_role" {
  description = "Whether to create an IAM role for enhanced monitoring"
  type        = bool
  default     = true

variable "create_db_credentials_secret" {
  description = "Whether to create a Secrets Manager secret for database credentials"
  type        = bool
  default     = true

variable "generate_master_password" {
  description = "Whether to generate a random master password"
  type        = bool
  default     = true

variable "create_sns_topic" {
  description = "Whether to create SNS topics for notifications"
  type        = bool
  default     = true

variable "create_db_event_subscription" {
  description = "Whether to create RDS event subscriptions"
  type        = bool
  default     = true

variable "create_db_access_role" {
  description = "Whether to create IAM roles for database access"
  type        = bool
  default     = true

variable "create_eks_integration" {
  description = "Whether to create EKS integration components"
  type        = bool
  default     = false

variable "create_eks_secrets_access" {
  description = "Whether to create Kubernetes Secret access for Secrets Manager"
  type        = bool
  default     = false

variable "create_eks_irsa_access" {
  description = "Whether to create IAM Roles for Service Accounts"
  type        = bool
  default     = false

variable "create_eks_k8s_resources" {
  description = "Whether to create Kubernetes resources (requires kubectl provider)"
  type        = bool
  default     = false

variable "create_eks_service_account" {
  description = "Whether to create Kubernetes Service Account"
  type        = bool
  default     = false

variable "create_acm_certificates" {
  description = "Whether to create ACM certificates"
  type        = bool
  default     = false

variable "create_public_certificate" {
  description = "Whether to create a public ACM certificate"
  type        = bool
  default     = false

variable "create_private_certificate" {
  description = "Whether to create a private ACM certificate"
  type        = bool
  default     = false

variable "create_waf_configuration" {
  description = "Whether to create WAF configuration"
  type        = bool
  default     = false

variable "create_pgbouncer" {
  description = "Whether to create PGBouncer connection pooling"
  type        = bool
  default     = false

variable "create_lambda_functions" {
  description = "Whether to create Lambda functions"
  type        = bool
  default     = false

###########################################################################
# Network Configuration
###########################################################################

variable "existing_vpc_id" {
  description = "ID of an existing VPC to use (if not creating a new VPC)"
  type        = string
  default     = ""

variable "existing_private_subnet_ids" {
  description = "IDs of existing private subnets to use (if not creating new subnets)"
  type        = list(string)
  default     = []

variable "existing_public_subnet_ids" {
  description = "IDs of existing public subnets to use (if not creating new subnets)"
  type        = list(string)
  default     = []

variable "existing_db_security_group_ids" {
  description = "IDs of existing security groups to use for the database (if not creating new ones)"
  type        = list(string)
  default     = []

variable "vpc_cidr" {
  description = "CIDR block for the VPC"
  type        = string
  default     = "10.0.0.0/16"

variable "availability_zones" {
  description = "List of availability zones to use"
  type        = list(string)
  default     = ["us-east-1a", "us-east-1b", "us-east-1c"]

variable "public_subnet_cidrs" {
  description = "CIDR blocks for the public subnets"
  type        = list(string)
  default     = ["10.0.0.0/24", "10.0.1.0/24", "10.0.2.0/24"]

variable "private_subnet_cidrs" {
  description = "CIDR blocks for the private subnets"
  type        = list(string)
  default     = ["10.0.10.0/24", "10.0.11.0/24", "10.0.12.0/24"]

variable "allowed_cidr_blocks" {
  description = "CIDR blocks allowed to access the database"
  type        = list(string)
  default     = ["10.0.0.0/16"]

###########################################################################
# Security Configuration
###########################################################################

variable "existing_kms_key_arn" {
  description = "ARN of an existing KMS key to use (if not creating a new key)"
  type        = string
  default     = ""

variable "existing_monitoring_role_arn" {
  description = "ARN of an existing IAM role for enhanced monitoring (if not creating a new role)"
  type        = string
  default     = ""

variable "existing_db_credentials_secret_arn" {
  description = "ARN of an existing Secrets Manager secret for database credentials (if not creating a new secret)"
  type        = string
  default     = ""

variable "existing_db_credentials_secret_name" {
  description = "Name of an existing Secrets Manager secret for database credentials (if not creating a new secret)"
  type        = string
  default     = ""

variable "existing_sns_topic_arns" {
  description = "ARNs of existing SNS topics for notifications (if not creating new topics)"
  type        = list(string)
  default     = []

###########################################################################
# Aurora DB Configuration
###########################################################################

variable "database_name" {
  description = "Name of the database to create"
  type        = string
  default     = "appdb"

variable "master_username" {
  description = "Username for the master DB user"
  type        = string
  default     = "dbadmin"

variable "master_password" {
  description = "Password for the master DB user (if not generating a random one)"
  type        = string
  default     = ""
  sensitive   = true

variable "existing_db_endpoint" {
  description = "Endpoint of an existing database (if not creating Aurora)"
  type        = string
  default     = ""

variable "db_port" {
  description = "Port on which the DB accepts connections"
  type        = number
  default     = 5432

variable "db_instance_count" {
  description = "Number of DB instances to create in the cluster"
  type        = number
  default     = 2

variable "db_instance_class" {
  description = "Instance type to use for the DB instances"
  type        = string
  default     = "db.r5.large"

variable "db_engine_version" {
  description = "Aurora PostgreSQL engine version"
  type        = string
  default     = "14.6"

variable "db_cluster_parameters" {
  description = "Map of DB cluster parameter group parameters"
  type        = map(string)
  default     = {}

variable "db_instance_parameters" {
  description = "Map of DB instance parameter group parameters"
  type        = map(string)
  default     = {}

variable "backup_retention_period" {
  description = "Days to retain backups for"
  type        = number
  default     = 7

variable "preferred_backup_window" {
  description = "Daily time range during which backups happen"
  type        = string
  default     = "02:00-03:00"

variable "preferred_maintenance_window" {
  description = "Weekly time range during which maintenance can occur"
  type        = string
  default     = "sun:04:00-sun:05:00"

variable "monitoring_interval" {
  description = "Seconds between points when Enhanced Monitoring metrics are collected"
  type        = number
  default     = 60

variable "performance_insights_enabled" {
  description = "Whether to enable Performance Insights"
  type        = bool
  default     = true

variable "performance_insights_retention_period" {
  description = "Days to retain Performance Insights data"
  type        = number
  default     = 7

variable "create_cloudwatch_alarms" {
  description = "Whether to create CloudWatch alarms for the database"
  type        = bool
  default     = true

variable "cpu_utilization_threshold" {
  description = "Percent of CPU utilization to trigger an alarm"
  type        = number
  default     = 80

variable "freeable_memory_threshold" {
  description = "Amount of freeable memory in bytes to trigger an alarm"
  type        = number
  default     = 256000000

variable "disk_queue_depth_threshold" {
  description = "Disk queue depth to trigger an alarm"
  type        = number
  default     = 64

variable "iam_database_authentication_enabled" {
  description = "Whether to enable IAM database authentication"
  type        = bool
  default     = false

variable "enabled_cloudwatch_logs_exports" {
  description = "List of log types to export to CloudWatch"
  type        = list(string)
  default     = ["postgresql"]

variable "auto_minor_version_upgrade" {
  description = "Whether to automatically apply minor engine upgrades"
  type        = bool
  default     = true

variable "allow_major_version_upgrade" {
  description = "Whether to allow major version upgrades"
  type        = bool
  default     = false

variable "deletion_protection" {
  description = "Whether to enable deletion protection on the DB cluster"
  type        = bool
  default     = true

variable "create_custom_endpoints" {
  description = "Whether to create custom endpoints for the cluster"
  type        = bool
  default     = false

variable "apply_immediately" {
  description = "Whether to apply changes immediately or during the next maintenance window"
  type        = bool
  default     = false

###########################################################################
# EKS Integration Configuration
###########################################################################

variable "eks_node_role_id" {
  description = "IAM role ID for EKS nodes"
  type        = string
  default     = ""

variable "eks_namespace" {
  description = "Kubernetes namespace for EKS resources"
  type        = string
  default     = "default"

variable "eks_db_access_role_arn" {
  description = "ARN of an existing IAM role for database access from EKS (if not creating a new role)"
  type        = string
  default     = ""

###########################################################################
# ACM Certificate Configuration
###########################################################################

variable "domain_name" {
  description = "Primary domain name for the ACM certificate"
  type        = string
  default     = ""

variable "subject_alternative_names" {
  description = "Additional domain names for the public ACM certificate"
  type        = list(string)
  default     = []

variable "internal_domain_name" {
  description = "Primary domain name for the private ACM certificate"
  type        = string
  default     = ""

variable "internal_subject_alternative_names" {
  description = "Additional domain names for the private ACM certificate"
  type        = list(string)
  default     = []

variable "auto_validate_certificate" {
  description = "Whether to automatically validate the certificate with DNS"
  type        = bool
  default     = true

variable "route53_zone_name" {
  description = "Route53 zone name for certificate validation"
  type        = string
  default     = ""

variable "create_alb_dns_record" {
  description = "Whether to create a DNS record for the ALB"
  type        = bool
  default     = false

variable "alb_dns_name" {
  description = "DNS name of the ALB (if creating a DNS record)"
  type        = string
  default     = ""

variable "alb_zone_id" {
  description = "Zone ID of the ALB (if creating a DNS record)"
  type        = string
  default     = ""

###########################################################################
# WAF Configuration
###########################################################################

variable "waf_scope" {
  description = "Scope of the WAF (REGIONAL or CLOUDFRONT)"
  type        = string
  default     = "REGIONAL"

variable "enable_waf_managed_rules" {
  description = "Whether to enable AWS managed rules for WAF"
  type        = bool
  default     = true

variable "enable_sql_injection_protection" {
  description = "Whether to enable SQL injection protection rules"
  type        = bool
  default     = true

variable "enable_rate_limiting" {
  description = "Whether to enable rate limiting rules"
  type        = bool
  default     = true

variable "waf_rate_limit" {
  description = "Request rate limit per 5 minutes per IP"
  type        = number
  default     = 2000

variable "waf_blocked_ip_addresses" {
  description = "List of IP addresses to block"
  type        = list(string)
  default     = []

variable "enable_waf_whitelist" {
  description = "Whether to enable IP whitelist"
  type        = bool
  default     = false

variable "waf_allowed_ip_addresses" {
  description = "List of IP addresses to allow when whitelist is enabled"
  type        = list(string)
  default     = []

variable "waf_custom_rules" {
  description = "List of custom WAF rules"
  type        = list(map(string))
  default     = []

variable "waf_alb_arn" {
  description = "ARN of the ALB to associate with the WAF"
  type        = string
  default     = ""

variable "enable_waf_logging" {
  description = "Whether to enable WAF logging"
  type        = bool
  default     = true

variable "waf_log_destination_arn" {
  description = "ARN of the destination for WAF logs"
  type        = string
  default     = ""

variable "waf_redacted_fields" {
  description = "List of fields to redact in WAF logs"
  type        = list(map(string))
  default     = []

###########################################################################
# PGBouncer Configuration
###########################################################################

variable "pgbouncer_subnet_ids" {
  description = "List of subnet IDs for PGBouncer (if different from existing_private_subnet_ids)"
  type        = list(string)
  default     = null

variable "pgbouncer_instance_type" {
  description = "EC2 instance type for PGBouncer instances"
  type        = string
  default     = "t3.micro"

variable "pgbouncer_key_name" {
  description = "SSH key name for PGBouncer instances"
  type        = string
  default     = ""

variable "pgbouncer_assign_public_ip" {
  description = "Whether to assign public IPs to PGBouncer instances"
  type        = bool
  default     = false

variable "pgbouncer_desired_capacity" {
  description = "Desired number of PGBouncer instances"
  type        = number
  default     = 2

variable "pgbouncer_min_size" {
  description = "Minimum number of PGBouncer instances"
  type        = number
  default     = 2

variable "pgbouncer_max_size" {
  description = "Maximum number of PGBouncer instances"
  type        = number
  default     = 4

variable "pgbouncer_port" {
  description = "Port that PGBouncer will listen on"
  type        = number
  default     = 6432

variable "pgbouncer_max_client_conn" {
  description = "Maximum number of client connections allowed by PGBouncer"
  type        = number
  default     = 1000

variable "pgbouncer_default_pool_size" {
  description = "Default pool size for PGBouncer"
  type        = number
  default     = 20

variable "pgbouncer_min_pool_size" {
  description = "Minimum pool size for PGBouncer"
  type        = number
  default     = 0

variable "pgbouncer_max_db_connections" {
  description = "Maximum number of database connections per database in PGBouncer"
  type        = number
  default     = 100

variable "pgbouncer_custom_params" {
  description = "Custom parameters for PGBouncer configuration"
  type        = string
  default     = ""

variable "pgbouncer_allowed_sg_ids" {
  description = "List of security group IDs allowed to connect to PGBouncer"
  type        = list(string)
  default     = []

variable "pgbouncer_enable_ssh" {
  description = "Whether to allow SSH access to PGBouncer instances"
  type        = bool
  default     = false

variable "pgbouncer_ssh_sg_ids" {
  description = "List of security group IDs allowed to SSH to PGBouncer instances"
  type        = list(string)
  default     = []

variable "pgbouncer_create_lb" {
  description = "Whether to create a load balancer for PGBouncer"
  type        = bool
  default     = true

###########################################################################
# Lambda Functions Configuration
###########################################################################

variable "lambda_functions" {
  description = "Map of Lambda functions to create"
  type        = map(any)
  default     = {}

###########################################################################
# Application Team Configuration
###########################################################################

variable "application_teams" {
  description = "List of application teams with their configurations"
  type        = list(map(string))
  default     = []
