{
  "aws_region": "us-east-1",
  "environment": "dev",
  "project_name": "sample-project",
  "owner": "infrastructure-team",
  "additional_tags": {
    "CostCenter": "IT-123",
    "ManagedBy": "Terraform"
  },
  "application_name": "sample-app",
  "database_name": "sampledb",
  "master_username": "dbadmin",
  "master_password": "REPLACE_WITH_SECURE_PASSWORD",
  "db_port": 5432,
  "create_aurora_db": true,
  "create_db_credentials_secret": true,
  "create_networking": true,
  "create_lambda_functions": true,
  "create_pgbouncer": true,
  "create_acm_certificates": true,
  "create_waf": true,
  "create_eks_integration": true,
  "create_serverless_lambda": true,
  "lambda_git_repository_url": "https://github.com/your-org/your-lambda-repo.git",
  "lambda_git_repository_branch": "main",
  "lambda_git_repository_token": "",
  "lambda_functions": {
    "my-lambda-function": {
      "description": "Example Lambda function",
      "runtime": "python3.9",
      "handler": "my-lambda.handler",
      "source_dir": "functions/my-lambda-functions",
      "environment_variables": {
        "ENV": "dev"
      },
      "build_command": "pip install -r requirements.txt -t .",
      "timeout": 30,
      "memory_size": 128
    },
    "call-group-function": {
      "description": "Function to handle call group operations",
      "runtime": "python3.9",
      "handler": "call-group.handler",
      "source_dir": "functions/call-group",
      "environment_variables": {
        "SCRIPT_PATH": "/function-job-scripts/call-group.sh"
      },
      "timeout": 300,
      "memory_size": 256
    },
    "vacuum-analyse-function": {
      "description": "Function to handle vacuum and analyse operations",
      "runtime": "python3.9",
      "handler": "vacuum-analyse.handler",
      "source_dir": "functions/vacuum-analyse",
      "environment_variables": {
        "SCRIPT_PATH": "/function-job-scripts/vacuum-analyse.sh"
      },
      "timeout": 600,
      "memory_size": 512
    }
  },
  "enable_lambda_xray": true,
  "enable_lambda_alarms": true,
  "existing_vpc_id": "",
  "existing_private_subnet_ids": [],
  "existing_public_subnet_ids": [],
  "existing_db_security_group_ids": [],
  "existing_db_endpoint": "",
  "existing_db_credentials_secret_arn": "",
  "eks_db_access_role_arn": "",
  "db_instance_class": "db.r5.large",
  "db_deletion_protection": true,
  "iam_database_authentication_enabled": true,
  "application_teams": [
    {
      "name": "team1",
      "application": "app1",
      "cost_center": "CC-001",
      "db_name": "team1db",
      "instance_count": 2,
      "instance_class": "db.r5.large",
      "parameters": {
        "rds.force_ssl": "1"
      }
    }
  ],
  "db_parameters": {
    "rds.force_ssl": "1",
    "pg_stat_statements.track": "all"
  },
  "domain_name": "example.com",
  "certificate_domain_name": "*.example.com",
  "enable_sql_injection_protection": true,
  "enable_xss_protection": true,
  "enable_ip_reputation_protection": true,
  "enable_bad_bot_protection": true,
  "enable_rate_limiting": true,
  "rate_limit_threshold": 2000,
  "pgbouncer_config": {
    "instance_type": "t3.medium",
    "min_connections": 10,
    "max_connections": 100,
    "default_pool_size": 20,
    "idle_timeout": 300
  },
  "create_route53_records": true,
  "route53_hosted_zone_name": "example.com",
  "route53_records": {
    "www": {
      "name": "www.example.com",
      "type": "A",
      "ttl": 300,
      "records": ["192.168.1.1"]
    },
    "api": {
      "name": "api.example.com",
      "type": "CNAME",
      "ttl": 300,
      "records": ["www.example.com"]
    }
  }
} 