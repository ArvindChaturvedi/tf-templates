| **Phase** | **Topic**                         | **Description**                                                                                      | **Why It Matters**                                                      |
| --------- | --------------------------------- | ---------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------- |
| **1**     | Introduction to Operating Systems | Basics of OS concepts: kernel, shell, processes, threads, file systems, and user management.         | Builds foundational knowledge to understand how Linux works.            |
| **2**     | Linux Basics                      | Shell (bash), file navigation, permissions (`chmod`, `chown`), `ls`, `cd`, `mkdir`, `rm`, `cp`, etc. | Essential to navigate and automate in cloud and server environments.    |
| **3**     | Users and Permissions             | Managing users/groups, sudo, file permissions, `umask`.                                              | Security and access control in Linux.                                   |
| **4**     | Linux File System Structure       | `/etc`, `/home`, `/var`, `/usr`, `/opt`, `/tmp`, and mount points.                                   | Understand how files and configurations are organized.                  |
| **5**     | Linux Networking Basics           | `ip`, `netstat`, `ping`, `curl`, `wget`, DNS, routing, ports, `ss`.                                  | Critical for debugging and configuring cloud networks and applications. |
| **6**     | System Monitoring                 | Tools: `top`, `htop`, `free`, `df`, `du`, `ps`, `journalctl`, `systemctl`, `dmesg`.                  | Helps troubleshoot system performance and services.                     |
| **7**     | Package Management                | `apt`, `yum`, `dnf`, `snap`, `rpm`, installing and removing packages.                                | Needed for managing tools and dependencies.                             |
| **8**     | Bash Scripting                    | Writing simple shell scripts, variables, conditionals, loops, functions, cron jobs.                  | Forms the basis for automation and scripting in DevOps.                 |


| **Phase** | **Topic**                    | **Description**                                                                | **Why It Matters**                                               |
| --------- | ---------------------------- | ------------------------------------------------------------------------------ | ---------------------------------------------------------------- |
| **1**     | AWS Overview                 | Learn about the AWS ecosystem, regions, availability zones, services, billing. | Provides big-picture understanding of cloud computing with AWS.  |
| **2**     | IAM (Identity & Access Mgmt) | Users, roles, policies, groups, least privilege principle.                     | Security and access management is foundational in any AWS setup. |
| **3**     | EC2 (Elastic Compute Cloud)  | Launch, SSH access, security groups, AMIs, key pairs, volumes, EBS snapshots.  | Learn to manage virtual servers — key DevOps responsibility.     |
| **4**     | S3 (Simple Storage Service)  | Buckets, object storage, access policies, versioning, lifecycle policies.      | Widely used for storage, backups, and hosting static content.    |
| **5**     | VPC (Virtual Private Cloud)  | Subnets, route tables, internet gateway, NAT gateway, security groups, NACLs.  | Networking is crucial for app communication and security in AWS. |
| **6**     | CloudWatch Basics            | Logs, metrics, alarms, dashboards.                                             | Monitoring and alerting — a core DevOps need.                    |
| **7**     | Elastic Load Balancing       | Types (ALB/NLB), listener rules, health checks.                                | For distributing traffic across applications.                    |
| **8**     | Auto Scaling                 | Launch templates, groups, scaling policies.                                    | Helps build scalable and fault-tolerant systems.                 |
| **9**     | RDS (Relational DB Service)  | Provisioning DBs, backups, multi-AZ, snapshots.                                | Cloud-native DB management.                                      |
| **10**    | CLI & SDK Basics             | AWS CLI setup, configuring credentials, basic commands for EC2, S3, IAM.       | Automation and scripting interfaces to interact with AWS.        |


| **Phase** | **Topic**          | **Description**                                                  | **Why It Matters**                                                  |
| --------- | ------------------ | ---------------------------------------------------------------- | ------------------------------------------------------------------- |
| **1**     | Git & GitHub       | Git basics, branching, merging, pull requests, GitHub workflows. | Version control is essential for collaborating and CI/CD workflows. |
| **2**     | VS Code + Terminal | Using VS Code effectively with Linux terminal integration.       | Enhances development speed and environment management.              |
| **3**     | Python Basics      | Variables, conditionals, loops, functions, packages, virtualenv. | Frequently used for scripting, automation, and working with APIs.   |
| **4**     | YAML & JSON        | Reading/writing configuration files in YAML/JSON.                | Used everywhere: Kubernetes, CloudFormation, CI/CD, etc.            |
| **5**     | Docker Basics      | Containers, Dockerfile, building images, running containers.     | Foundation for containerization and Kubernetes.                     |
| **6**     | Terraform Basics   | Infrastructure as Code (IaC), deploying simple AWS resources.    | Essential for managing cloud infrastructure reliably.               |
| **7**     | CI/CD Concepts     | Introduction to pipelines, GitHub Actions, or Jenkins basics.    | Core part of DevOps lifecycle for fast and reliable deployments.    |
